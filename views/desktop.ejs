<html>
  <head>
    <title>Desktop2 </title>
    <link rel="stylesheet" href="/stylesheets/style.css" />
    <script src="/javascripts/webauthn-sdk.js"></script>
    <script src="/javascripts/bundle.js"></script>
    <script>
      hello();
      async function init() {
        window.WebAuthnSdk.init('<%= clientId%>', {serverPath: "https://webauthn.identity.security"})
        .then(() => {
          console.log("init done");

          // enable button
          const elem = document.getElementById('start');
          elem.removeAttribute('disabled');
        });
      }

      // Triggered when the auth device calls attach()
      async function onDeviceAttach() {
        // set the status text
        const statusElem = document.getElementById('status');
        statusElem.textContent = "Mobile Device Connected";

        return true; // Return true to keep polling
      }

      // Triggered at the end of the registration process on the auth device
      async function onCredentialRegister(authCode) {
        return await completeSession(authCode);
      }

      // Triggered at the end of the authentication process on the auth device
      async function onCredentialAuthenticate(authCode) {
        return await completeSession(authCode);
      }

      // Triggered on failure
      async function onFailure(error) {
        console.log(error);
        // Log the error and display a message to the user / navigate to an error page.
        // set the status text
        const statusElem = document.getElementById('status');
        statusElem.textContent = `Error: ${error}`;
      }

      async function completeSession(code) {
        // set the status text
        const statusElem = document.getElementById('status');
        statusElem.textContent = `Completed with auth code: ${code}`;
        // Get user tokens using the received code as described below
        return false;
      }


      async function startCrossDeviceFlow() {
      // Initiate the cross device flow and provide the handlers.
        const controller = await window.WebAuthnSdk.startCrossDeviceFlow({
          onDeviceAttach,
          onCredentialRegister,
          onCredentialAuthenticate,
          onFailure,
        });

        // Construct the URL of your login page along with the authSessionId param (aid in this example).
        // It is best to display the generated URL using a QR code.
        const url = `<%=process.env.SANDBOX_URL%>mobile?aid=${controller.authSessionId}`;
        const qrElem = document.getElementById('qr');
        qrElem.setAttribute('src', `https://qrickit.com/api/qr.php?d=${url}&qrsize=150&t=p&e=m`);
        const urlElem = document.getElementById('url');
        urlElem.textContent = `You can also copy the following link and open in ANOTHER browser:  ${url}`;
        
        // set the status text
        const statusElem = document.getElementById('status');
        statusElem.textContent = "Polling";
      }

    </script>
  </head>

  <body onload="init()">
    <h1>Desktop</h1>
    <span>Client ID =  <%= clientId%></span>
    <br><br>
    <button id="start" onclick="startCrossDeviceFlow()" disabled>Start</button>
    <br><br>
    <img id="qr" src="" />
    <p id="url"></p>
    <br><br>
    <span id="status"></span>
  </body>
</html>